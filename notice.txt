1. Use sequelize ORM for database model & migration architecture. 
1.1 Install sequelize package, npm install --save sequelize
1.2 Install database drivers i,e (mysql, postgresql, sqlite etc), npm install --save pg pg-hstore # Postgres or npm install --save mysql2 #mysql
1.3 Migration, Models, Seeders:
1.3.1 Install sequelize cli first for running migration and seeder commands, npm install --save-dev sequelize-cli
 NOT: USE ONE OPTION BTN 1.3.2 and 1.4.*
1.3.2  Create  default configuration files sequelize-cli , npx sequelize-cli init
    This will create following folders

    config, contains config file, which tells CLI how to connect with database
    models, contains all models for your project
    migrations, contains all migration files
    seeders, contains all seed files
1.4.1 Tell sequelize cli to create custom configuration files in these path with default config values. It use .sequelizerc file in the root directory
1.4.2 Create .sequelizerc file and add these code. You can modify according to your preferences, then run npx sequelize-cli init
        const path = require('path');
        module.exports = {
        config: path.resolve('config', 'config.js'), // change to config.js instead of .json
        'models-path': path.resolve('db', 'models'),
        'seeders-path': path.resolve('db', 'seeders'),
        'migrations-path': path.resolve('db', 'migrations'),
        };


